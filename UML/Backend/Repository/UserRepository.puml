@startuml
class UserRepository {
    + UserRepository(connector:Connector, hash:Hash, crypt:Crypt)
    + <<async>> ValidateUserAsync(username:string, password:string, userType:string) : Task<bool>
    + <<async>> checkUsageEmailAsync(email:string) : Task<(bool status, string message)>
    + <<async>> addCustomerAsync(personData:Object[]) : Task<(bool status, string message, int newUserID)>
    + <<async>> addPersonalCustomerAsync(personalData:Object[]) : Task<(bool status, string message)>
    + <<async>> addEmployeeCustomerAsync(employeeData:Object[]) : Task<(bool status, string message)>
    + <<async>> GetUserIdAsync(email:string, table:string) : Task<string>
    + <<async>> GetUserNameAsync(userId:string) : Task<string>
    + <<async>> EditUserInfoAsync(data:List<object[]>) : Task<(bool status, string message)>
    + <<async>> IsKvkNumberAsync(kvkNumber:int) : Task<bool>
    + <<async>> DeleteUserAsync(userId:string) : Task<(bool status, string message)>
    - <<async>> CreateUserInfoQuery(data:List<object[]>) : Task<(bool goodQuery, string message)>
    + <<async>> GetKindEmployeeAsync(userId:string) : Task<(bool status, string message)>
    + <<async>> AddStaff(personData:Object[]) : Task<(bool status, string message)>
    + <<async>> IsUserEmployee(id:int) : Task<bool>
}
IUserRepository <|-- UserRepository
UserRepository --> "_connector" Connector
UserRepository --> "_hash" Hash
UserRepository --> "_crypt" Crypt
@enduml
