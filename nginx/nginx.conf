worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 8080;
        server_name 95.99.30.110;

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }


        location / {
            proxy_pass http://192.168.1.25:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://192.168.1.25:5000; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
}

# HTTP 
#server {
    #listen 8080;
    #server_name 95.99.30.110;# carandall.nl www.carandall.nl

    #location / {
        #root /usr/share/nginx/html;
        #index index.html;
        #try_files $uri /index.html;
    #}

    #location /.well-known/acme-challenge/ {
        #root /var/www/certbot;
        #allow all;
    #}

    #location / {
        #proxy_pass http://192.168.1.25:3000; 
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}

    # Proxy API requests to the backend
    #location /api/ {
        #proxy_pass http://192.168.1.25:5001; 
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}

    # Redirecten met de juiste port
    #return 301 https://$host:$request_uri;
#}

# Main HTTPS server block
#server {
    #listen 8443 ssl;
    #listen 8443;
    #server_name 95.99.30.110;# carandall.nl www.carandall.nl

    # SSL certificaat
    #ssl_certificate /etc/letsencrypt/live/carandall.nl/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/carandall.nl/privkey.pem;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Proxy frontend
    #location / {
        #proxy_pass http://frontend:3000; 
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}

    # Proxy backend
    #location /api/ {
       #proxy_pass http://backend:5001; 
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}
#}

#server {
    #listen 80;
    #server_name 95.99.30.110;# carandall.nl www.carandall.nl

    #location /.well-known/acme-challenge/ {
        #root /var/www/certbot;
        #allow all;
    #}

    #location / {
        #root /usr/share/nginx/html;  # Path where frontend is copied inside the container
        #try_files $uri $uri/ /index.html;
        #proxy_pass http://frontend:3000; 
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}

    # Proxy API requests to the backend
    #location /api/ {
        #proxy_pass http://backend:5001;  # Assuming the backend service runs on port 5001
        #proxy_set_header Host $host;
        #roxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;
    #}

    # Redirecten met de juiste port
    #return 301 https://$host:$request_uri;
#}