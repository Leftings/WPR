on: [push, pull_request]
name: Continuous Integration

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]  # Matrix for both Windows and macOS
        configuration: [Debug, Release]  # Different configurations
    timeout-minutes: 30

    runs-on: ${{ matrix.os }}

    env:
      Solution_Name: WPR.sln  # Replace with your solution name

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET SDK on all OS
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  # Use the correct .NET version

    # Cache NuGet packages to speed up the process
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln', '**/Directory.Build.*') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    # Restore dependencies for the solution (No --configuration flag)
    - name: Restore the application
      run: dotnet restore ${{ env.Solution_Name }}

    # Execute Unit Tests (now restore is done before running tests)
    - name: Execute Unit Tests
      run: dotnet test --configuration ${{ matrix.configuration }} --no-build --verbosity normal

    # Optionally, you can include a build step if necessary (useful for Debug/Release)
    - name: Build the application
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }}

    # Set up MSBuild on Windows only
    - name: Setup MSBuild (Windows Only)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    # Windows-specific restore command if needed
    - name: Restore the application (Windows only)
      if: runner.os == 'Windows'
      run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute unit tests (Cross-platform)
    - name: Execute Unit Tests
      run: dotnet test --no-restore --configuration ${{ matrix.configuration }}


