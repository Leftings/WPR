on: [push, pull_request]
name: Continuous Integration
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test (${ matrix.os }, ${ matrix.configuration })
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        configuration: [Debug, Release]
    timeout-minutes: 30

    runs-on: ${{ matrix.os }}

    env:
      Solution_Name: WPR.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln', '**/Directory.Build.*') }}
        
      - name: Setup MSBuild (Windows Only)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      - name: Restore the application
        run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}
        env:
          Configuration: ${{ matrix.configuration }}
        
      - name: Execute Unit Tests
        run: dotnet test --no-restore --configuration ${{ matrix.configuration }}

  merge_blocker:
    name: Block Merge if Tests Fail
    runs-on: ubuntu-latest
    needs: build
    if: always()  # Ensure this runs even if the previous job fails
  
    steps:
      - name: Verify all jobs passed
        run: |
          echo "Build status: ${{ needs.build.result }}"
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "Tests did not pass. Blocking merge."
            exit 1
          else
            echo "Tests passed successfully. Merge is allowed."
          fi

